knitr::opts_knit$set(root.dir = normalizePath("/mnt/c/Users/daven/Documents/qbio_490_daven/analysis_data"))
knitr::opts_knit$set(root.dir = normalizePath("Users/daven/Documents/qbio_490_daven/analysis_data"))
knitr::opts_knit$set(root.dir = normalizePath("Documents/qbio_490_daven/analysis_data"))
knitr::opts_knit$set(root.dir = normalizePath("Users/daven/Documents/qbio_490_daven/analysis_data"))
knitr::opts_knit$set(root.dir = normalizePath("mnt/c/Users/daven/Documents/qbio_490_daven/analysis_data"))
knitr::opts_knit$set(root.dir = normalizePath("c/Users/daven/Documents/qbio_490_daven/analysis_data"))
knitr::opts_knit$set(root.dir = normalizePath("/Users/daven/Documents/qbio_490_daven/analysis_data"))
knitr::opts_knit$set(root.dir = normalizePath(Users/daven/Documents/qbio_490_daven/analysis_data))
knitr::opts_knit$set(root.dir = normalizePath(/daven/Documents/qbio_490_daven/analysis_data))
knitr::opts_knit$set(root.dir = normalizePath(daven/Documents/qbio_490_daven/analysis_data))
knitr::opts_knit$set(root.dir = normalizePath(Documents/qbio_490_daven/analysis_data))
knitr::opts_knit$set(root.dir = normalizePath(qbio_490_daven/analysis_data))
knitr::opts_knit$set(root.dir = normalizePath(/mnt/c/Users/daven/Documents/qbio_490_daven/analysis_data))
knitr::opts_knit$set(root.dir = normalizePath(mnt/c/Users/daven/Documents/qbio_490_daven/analysis_data))
# replace path with the path to your qbio_490_name directory
knitr::opts_knit$set(root.dir = normalizePath("/Users/daven/Documents/qbio_490_daven/"))
# replace path with the path to your qbio_490_name directory
knitr::opts_knit$set(root.dir = normalizePath(/Users/daven/Documents/qbio_490_daven/))
knitr::opts_knit$set(root.dir = normalizePath("/Users/daven/Documents/qbio_490_daven/analysis_data"))
clin_query <- #Fill in correct command
#You should have already downloaded the TCGA-SKCM clinical data in TCGA Data Download, so DO NOT run GDCdownload(clin_query) again!
clinical.BCRtab.all <- # Fill in correct command
clin_query <- GDCquery(project = "TCGA-SKCM",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = 'BCR Biotab')
clin_query <- GDCquery(project = "TCGA-SKCM",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = 'BCR Biotab')
clin_query <- GDCquery(project = "TCGA-SKCM",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = 'BCR Biotab')
clin_query <- GDCquery(project = "TCGA-SKCM",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = 'BCR Biotab')
clin_query <- GDCquery (project = "TCGA-SKCM",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = 'BCR Biotab')
clin_query <- GDCquery(project = "TCGA-SKCM",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = 'BCR Biotab')
rna_query <- GDCquery(project ="TCGA-SKCM",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "STAR - Counts")
clin_query <- GDCquery(project = "TCGA-SKCM",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = 'BCR Biotab')
clin_query <- GDCquery(project = "TCGA-SKCM",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = 'BCR Biotab')
clin_query <- GDCquery(project = "TCGA-SKCM",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = 'BCR Biotab')
knitr::opts_knit$set(root.dir = normalizePath("/Users/daven/Documents/qbio_490_daven/analysis_data"))
clin_query <- GDCquery(project = "TCGA-SKCM",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = 'BCR Biotab')
knitr::opts_knit$set(root.dir = normalizePath("/Users/daven/Documents/qbio_490_daven/analysis_data"))
knitr::opts_knit$set(root.dir = normalizePath("/Users/daven/Documents/qbio_490_daven/analysis_data"))
knitr::opts_knit$set(root.dir = normalizePath("/Users/daven/Documents/qbio_490_daven/analysis_data"))
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
if (!require("TCGAbiolinks", quietly = TRUE))
BiocManager::install("TCGAbiolinks")
if (!require("maftools", quietly = TRUE))
BiocManager::install("maftools")
library(BiocManager)
library(TCGAbiolinks)
library(maftools)
clin_query <- GDCquery(project = "TCGA-SKCM",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = 'BCR Biotab')
GDCdownload(clin_query)
clinical.BCRtab.all <- GDCprepare(clin_query)
rna_query <- GDCquery(project ="TCGA-SKCM",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "STAR - Counts")
GDCdownload(rna_query)
rna_se <- GDCprepare(rna_query)
rna_clinical <- data.frame(rna_se@colData)
rna_clinical$Tumor_Sample_Barcode <- rna_clinical$patient
maf_query <- GDCquery(
project = 'TCGA-SKCM',
data.category = "Simple Nucleotide Variation",
access = "open", # we only have access to somatic mutations which are open access
data.type = "Masked Somatic Mutation",
workflow.type = "Aliquot Ensemble Somatic Variant Merging and Masking"
)
GDCdownload(maf_query)
maf <- GDCprepare(maf_query) # as long as it runs, ignore any errors
maf_object <- read.maf(maf = maf,
clinicalData = rna_clinical,
isTCGA = TRUE)
plot(cars)
clin_query <- GDCquery(project = "TCGA-SKCM",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = 'BCR Biotab')
#GDCdownload(clin_query)
clinical.BCRtab.all <- GDCprepare(clin_query)
clinic <- clinical.BCRtab.all$clinical_patient_skcm[-c(1,2),]
colnames(clinic)[ colnames(clinic) == "bcr_patient_barcode" ] <- "Tumor_Sample_Barcode"
clinic <- read.csv("/Users/daven/Documents/qbio_490_daven/analysis_data/skcm_clinical_data.csv")
write.csv(clinic, "/PATH/TO/analysis_data/skcm_clinical_data.csv", row.names=FALSE)
clinic <- clinical.BCRtab.all$clinical_patient_skcm[-c(1,2),]
colnames(clinic)[ colnames(clinic) == "bcr_patient_barcode" ] <- "Tumor_Sample_Barcode"
clinic <- clinical.BCRtab.all$clinical_patient_skcm[-c(1,2),]
colnames(clinic)[ colnames(clinic) == "bcr_patient_barcode" ] <- "Tumor_Sample_Barcode"
write.csv(clinic, "/Users/daven/Documents/qbio_490_daven/analysis_data/skcm_clinical_data.csv", row.names=FALSE)
clinic <- read.csv("/Users/daven/Documents/qbio_490_daven/analysis_data/skcm_clinical_data.csv")
rownames(clinic)
head(clinic)
rownames(clinic)
print(ncol(clinic))
print(ncol(clinic))
print(nrow(clinic))
print(ncol(clinic))
print(nrow(clinic))
## 65 columns, 470 rows
typeof(clinic$gender)
print(ncol(clinic))
print(nrow(clinic))
## 65 columns, 470 rows
typeof(clinic$gender)
print(ncol(clinic))
print(nrow(clinic))
## 65 columns, 470 rows
typeof(clinic$gender)
##character type output
head(clinic)
View(clinic)
View(clinic)
print(ncol(clinic))
print(nrow(clinic))
## 65 columns, 470 rows
typeof(clinic$gender)
##character type output
print(clinic[5,6])
print(ncol(clinic))
print(nrow(clinic))
## 65 columns, 470 rows
typeof(clinic$gender)
##character type output
print((clinic[5,6])/365)
print(ncol(clinic))
print(nrow(clinic))
## 65 columns, 470 rows
typeof(clinic$gender)
##character type output
print(clinic[5,6])
print(ncol(clinic))
print(nrow(clinic))
## 65 columns, 470 rows
typeof(clinic$gender)
##character type output
print(clinic[5,6])
-27124/365
print(ncol(clinic))
print(nrow(clinic))
## 65 columns, 470 rows
typeof(clinic$gender)
##character type output
clinic[5,6]/375
print(ncol(clinic))
print(nrow(clinic))
## 65 columns, 470 rows
typeof(clinic$gender)
##character type output
print(clinic[5,6])
-27124/365
print(ncol(clinic))
print(nrow(clinic))
## 65 columns, 470 rows
typeof(clinic$gender)
##character type output
print(clinic[5,28])
##74 years old
print(ncol(clinic))
print(nrow(clinic))
## 65 columns, 470 rows
typeof(clinic$gender)
##character type output
print(clinic[5,28])
##74 years old
30286-1856
print(ncol(clinic))
print(nrow(clinic))
## 65 columns, 470 rows
typeof(clinic$gender)
##character type output
print(clinic[5,28])
##74 years old
(30286-1856)/365
print(ncol(clinic))
print(nrow(clinic))
## 65 columns, 470 rows
typeof(clinic$gender)
##character type output
print(clinic[5,28])
##74 years old
(30286-1856)/365
##77 years o;d
rownames(clinic)
rownames(clinic)
colnames(clinic)
clinic$vital_status
clinic$vital_status
clinic[,15]
attach(clinic)
plot(age_at_diagnosis,breslow_thickness_at_diagnosis, main="age at diagnosis vs breslow thickness at diagnosis"
xlab = "age"
attach(clinic)
plot(age_at_diagnosis,breslow_thickness_at_diagnosis, main="age_at_diagnosis_vs_breslow thickness_at_diagnosis"
xlab = "age"
attach(clinic)
plot(clinic$age_at_diagnosis,clinic$breslow_thickness_at_diagnosis) main="age at diagnosis vs breslow thickness at diagnosis"
attach(clinic)
plot(clinic$age_at_diagnosis,clinic$breslow_thickness_at_diagnosis)
main="age at diagnosis vs breslow thickness at diagnosis"
xlab = "age"
ylab = "breslow thickness")
attach(clinic)
plot(clinic$age_at_diagnosis,clinic$breslow_thickness_at_diagnosis)
main="age at diagnosis vs breslow thickness at diagnosis"
xlab = "age"
ylab = "breslow thickness")
attach(clinic)
plot((clinic$age_at_diagnosis,clinic$breslow_thickness_at_diagnosis)
attach(clinic)
plot(clinic$age_at_diagnosis,clinic$breslow_thickness_at_diagnosis)
main="age at diagnosis vs breslow thickness at diagnosis"
xlab = "age"
ylab = "breslow thickness"
attach(clinic)
plot(clinic$age_at_diagnosis,clinic$breslow_thickness_at_diagnosis
main="age at diagnosis vs breslow thickness at diagnosis"
attach(clinic)
plot(clinic$age_at_diagnosis,clinic$breslow_thickness_at_diagnosis
main="age vs thickness"
attach(clinic)
plot(clinic$age_at_diagnosis,clinic$breslow_thickness_at_diagnosis
main="title"
attach(clinic)
plot(clinic$age_at_diagnosis,clinic$breslow_thickness_at_diagnosis)
main="age at diagnosis vs breslow thickness at diagnosis"
xlab = "age"
ylab = "breslow thickness"
attach(clinic)
plot(clinic$age_at_diagnosis,clinic$breslow_thickness_at_diagnosis,
main="age at diagnosis vs breslow thickness at diagnosis",
xlab = "age",
ylab = "breslow thickness")
attach(clinic)
plot(clinic$age_at_diagnosis,clinic$breslow_thickness_at_diagnosis,
main="age at diagnosis vs breslow thickness at diagnosis",
xlab = "age",
ylab = "breslow thickness",
col = rainbow(4))
bplot(clinic$submitted_tumor_dx_days_to,clinic$vital_status)
boxplot(clinic$submitted_tumor_dx_days_to,clinic$vital_status)
boxplot(clinic$submitted_tumor_dx_days_to,by clinic$vital_status)
boxplot(clinic$submitted_tumor_dx_days_to,by clinic)
boxplot(clinic$submitted_tumor_dx_days_to, clinic$vital_status)
boxplot(clinic$height_cm_at_diagnosis, clinic$weight_kg_at_diagnosis)
boxplot(clinic$height_cm_at_diagnosis, clinic$weight_kg_at_diagnosis)
boxplot(clinic$height_cm_at_diagnosis, clinic$weight_kg_at_diagnosis)
boxplot(clinic$height_cm_at_diagnosis, clinic$weight_kg_at_diagnosis)
boxplot(clinic$height_cm_at_diagnosis, clinic$weight_kg_at_diagnosis)
boxplot(clinic$height_cm_at_diagnosis, clinic$weight_kg_at_diagnosis)
boxplot(clinic$height_cm_at_diagnosis, clinic$weight_kg_at_diagnosis)
boxplot(clinic$age_at_diagnosis ~ clinic$weight_kg_at_diagnosis, clinic)
boxplot(clinic$height_cm_at_diagnosis, main = "height at diagnosis", names=clinic$weight_kg_at_diagnosis)
names(clinic)
names(clinic)
boxplot(weight_kg_at_diagnosis)
names(clinic)
class(weight_kg_at_diagnosis)
names(clinic)
class()
names(clinic)
#class()
as.numeric(clinic$birth_days_to)
names(clinic)
clinic$birth_days_to <- as.numeric(clinic$birth_days_to)
names(clinic)
clinic$birth_days_to <- as.numeric(clinic$birth_days_to)
class(birth_days_to)
names(clinic)
clinic$birth_days_to <- as.numeric(clinic$birth_days_to)
type(clinic$birth_days_to)
names(clinic)
clinic$birth_days_to <- as.numeric(clinic$birth_days_to)
typeof(clinic$birth_days_to)
names(clinic)
clinic$birth_days_to <- as.numeric(clinic$birth_days_to)
boxplot(clinic$birth_days_to)
names(clinic)
clinic$birth_days_to <- as.numeric(clinic$birth_days_to)
boxplot(clinic$birth_days_to ~ clinic$gender)
names(clinic)
clinic$birth_days_to <- as.numeric(clinic$birth_days_to)
boxplot(clinic$birth_days_to ~ clinic$gender,
main = "birthdays to gender",
set.seed(123)
a = cumsum(rnorm(100))
names(clinic)
clinic$birth_days_to <- as.numeric(clinic$birth_days_to)
boxplot(clinic$birth_days_to ~ clinic$gender,
main = "birthdays to gender",
set.seed(123),
a = cumsum(rnorm(100)),
n=length(a),
mm=mean(a),
dd=sd(a),
error <- qnorm(0.975)*dd/sqrt(n),
inf <- mm-error,
sup <- mm+error,
boxplot(a,col=3),
lines(c(0.75,1.25),c(inf,inf),col=4),
lines(c(0.75,1.25),c(mm,mm),col=2,lwd=2),
lines(c(0.75,1.25),c(sup,sup),col=4),
legend("topleft", c("95% CI", "Mean"), lty=1,col = c(4, 2),bty ="n"))
names(clinic)
clinic$birth_days_to <- as.numeric(clinic$birth_days_to)
boxplot(clinic$birth_days_to ~ clinic$gender,
main = "birthdays to gender"))
names(clinic)
clinic$birth_days_to <- as.numeric(clinic$birth_days_to)
boxplot(clinic$birth_days_to ~ clinic$gender,
main = "birthdays to gender")
names(clinic)
clinic$birth_days_to <- as.numeric(clinic$birth_days_to)
boxplot(clinic$birth_days_to ~ clinic$gender,
main = "birthdays to gender",
xlab = "gender",
ylab = "birthdays"
)
names(clinic)
clinic$birth_days_to <- as.numeric(clinic$birth_days_to)
boxplot(clinic$birth_days_to ~ clinic$gender,
main = "birthdays to gender",
xlab = "gender",
ylab = "birthdays",
notch = TRUE)
vital_status_na_mask <- ?help(mask
)
vital_status_na_mask <- ifelse(clinic$vital_status=!"NA",TRUE,FALSE)
vital_status_na_mask <- ifelse(clinic$vital_status="NA",TRUE,FALSE)
vital_status_na_mask <- ifelse(clinic$vital_status=="NA",TRUE,FALSE)
vital_status_na_mask <- ifelse(clinic$vital_status=="!NA",TRUE,FALSE)
vital_status_na_mask <- ifelse(clinic$vital_status=="NA",TRUE,FALSE)
vital_status_na_mask <- ifelse(clinic$vital_status=="NA",TRUE,FALSE)
vital_status_na_mask
vital_status_na_mask <- ifelse(clinic$vital_status=="[Not Available]",TRUE,FALSE)
vital_status_na_mask
vital_status_na_mask <- ifelse(clinic$vital_status!="[Not Available]",TRUE,FALSE)
masked_vitals <-
vital_status_na_mask <- ifelse(clinic$vital_status!="[Not Available]",TRUE,FALSE)
vital_status_na_mask <- ifelse(clinic$vital_status!="[Not Available]",TRUE,FALSE)
vital_status_na_mask
vital_status_na_mask <- ifelse(clinic$vital_status!="[Not Available]",TRUE,FALSE)
vital_status_clinic <- clinic[vital_status_na_mask,]
View(vital_status_clinic)
vital_status_na_mask <- ifelse(clinic$vital_status!="[Not Available]",TRUE,FALSE)
vital_status_clinic <- clinic[vital_status_na_mask,]
vital_status_clinic[,15]
male_mask <- ifelse(clinic$gender == "MALE",TRUE,FALSE)
male_mask <- ifelse(clinic$gender == "MALE",TRUE,FALSE)
vital_status_gender <- clinic[male_mask,]
vital_status_gender[,7]
under35_over60_mask <- ifelse(clinic$age_at_diagnosis <35 |>60, TRUE, FALSE)
under35_over60_mask <- ifelse(clinic$age_at_diagnosis <35 |clinic$age_at_diagnosis>60, TRUE, FALSE)
male_mask <- ifelse(clinic$gender == "MALE",TRUE,FALSE)
gender_mask <- clinic[male_mask,]
gender_mask[,7]
under35_over60_mask <- ifelse(clinic$age_at_diagnosis <35 |clinic$age_at_diagnosis>60, TRUE, FALSE)
age_mask <- clinic[under35_over60_mask,]
age_mask[,28]
under35_over60_mask <- ifelse(clinic$age_at_diagnosis <35 |clinic$age_at_diagnosis>60 & clinic$age_at_diagnosis!="[Not Available]", TRUE, FALSE)
age_mask <- clinic[under35_over60_mask,]
age_mask[,28]
under35_over60_mask <- ifelse(clinic$age_at_diagnosis <35 |clinic$age_at_diagnosis>60 | clinic$age_at_diagnosis!="[Not Available]", TRUE, FALSE)
age_mask <- clinic[under35_over60_mask,]
age_mask[,28]
under35_over60_mask <- ifelse(clinic$age_at_diagnosis <35 |clinic$age_at_diagnosis>60 & clinic$age_at_diagnosis!="[Not Available]", TRUE, FALSE)
age_mask <- clinic[under35_over60_mask,]
age_mask[,28]
under35_over60_mask <- ifelse(clinic$age_at_diagnosis <35 |clinic$age_at_diagnosis>60 & clinic$age_at_diagnosis!= "[Not Available]", TRUE, FALSE)
age_mask <- clinic[under35_over60_mask,]
age_mask[,28]
under35_over60_mask <- ifelse(clinic$age_at_diagnosis <35 |clinic$age_at_diagnosis>60, TRUE, FALSE)
age_mask <- clinic[under35_over60_mask,]
age_mask[,28]
no_middle_clinic <- clinic[under35_over60_mask,]
under35_over60_mask <- ifelse(clinic$age_at_diagnosis <35 |clinic$age_at_diagnosis>60, TRUE, FALSE)
no_middle_clinic <- clinic[under35_over60_mask,]
no_middle_clinic
if (!require(survival)) {
install.packages("survival")
}
if (!require(survminer)) {
install.packages("survminer")
}
if (!require(ggplot2)) {
install.packages("ggplot2")
}
library(survival)
library(survminer)
library(ggplot2)
?is.na
